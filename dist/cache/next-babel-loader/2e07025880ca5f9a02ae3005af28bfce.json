{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201-test\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\shoptest2\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react'; //---->引入react模块\n\nimport \"./sp.css\"; //引入sp.css样式\n\nvar Sp = /*#__PURE__*/function (_Component) {\n  _inherits(Sp, _Component);\n\n  var _super = _createSuper(Sp);\n\n  function Sp(props) {\n    var _this;\n\n    _classCallCheck(this, Sp);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      //定义一个初始化状态 \n      good: [//将页面的数据写入good中用数组的方式保存\n      {\n        img: \"1.png\",\n        txt: \"手工\",\n        jq: 12,\n        num: 1,\n        checked: false\n      }, //这里的图片都是本地图片，需要你本人自己替换，样式里也有一张需要替换 \n      {\n        img: \"2.png\",\n        txt: \"桌\",\n        jq: 20,\n        num: 1,\n        checked: false\n      }, {\n        img: \"3.png\",\n        txt: \"椅\",\n        jq: 32,\n        num: 1,\n        checked: false\n      }, {\n        img: \"1.png\",\n        txt: \"板凳\",\n        jq: 40,\n        num: 1,\n        checked: false\n      }],\n      c: false //定义一个状态，后面用来判断 多选框 \n\n    };\n    return _this;\n  }\n\n  _createClass(Sp, [{\n    key: \"zj\",\n    value: function zj() {\n      //--->总价\n      var list = this.state.good; //获取list中的数据  \n\n      var s = 0; //声明一个s变量用来保存总价 \n\n      list.forEach(function (v, i) {\n        //循环它里面的数据\n        if (v.checked) {\n          //判断，当多选框被选中的时候 \n          s += v.jq * v.num; //总价等于当前被选中的数据的单价*数量 \n        }\n      });\n      return s;\n    }\n  }, {\n    key: \"jj\",\n    value: function jj(n) {\n      //+加按钮\n      var list = this.state.good;\n      list[n].num++; //n为当前的下标，点击后，每次数量加1\n\n      this.setState({\n        good: list\n      }); //在更新当前的状态 \n    }\n  }, {\n    key: \"jian\",\n    value: function jian(n) {\n      //-减按钮\n      var list = this.state.good;\n      list[n].num--; //n为当前的下标，点击后，每次减1 \n\n      if (list[n].num <= 0) {\n        //判断，当数量减到0的时候，弹出“最少买一个”，后面不在执行，最低的数量是1\n        alert(\"最少买一个\");\n        list[n].num = 1;\n      }\n\n      this.setState({\n        good: list\n      }); //在更新当前的状态 \n    }\n  }, {\n    key: \"tg\",\n    value: function tg(n) {\n      //--->点击切换按钮   多选框  目前做了三种方法可以实现 \n      var list = this.state.good;\n      list[n].checked = !list[n].checked; //取反值 \n      // ===================================第一种方法\n      // var ler=list.filter((v,i)=>{//数组过滤的方法 \n      //     return v.checked//--->返回 该多选框为被选中\n      // });\n      // if(ler.length==list.length){//--->判断选中的多选框的长度和数组中的数据长度是否相同\n      //     this.setState({good:list,c:true})//--->如果是，把全选的属性false更新为true\n      // }else{\n      //     this.setState({good:list,c:false})//--->如果不是，全选属性为false\n      // }\n      // ==============================================第二种方法\n      // var ler=list.every((v,i)=>{//--->every当多选框都被选中的时候，条件都满足true\n      //     return v.checked;//--->单个被选中返回false\n      // })\n      // // console.log(ler)\n      // this.setState({good:list,c:ler})//更新cc的状态为ler,当ler为false时，cc就是false,反之亦然 \n      // ====================================================第三种方法\n\n      var sun = 0; //声明一个sun ，用来保存数值\n\n      var ff = true; //声明一个状态 true  false 判断\n\n      list.forEach(function (v, i) {\n        //循环加判断 \n        if (v.checked) {\n          //如果多选框被选中的时候，就让sun加1\n          sun++;\n        }\n      });\n\n      if (sun == list.length) {\n        //当sun被选中的数量等于它当前整体的长度的时候 \n        ff = true; //输出ff的状态为true\n      } else {\n        //反之 \n        ff = false;\n      }\n\n      this.setState({\n        good: list,\n        c: ff\n      }); //让cc的状态等于当前ff的状态\n    }\n  }, {\n    key: \"qx\",\n    value: function qx() {\n      //--->全选\n      var list = this.state.good;\n      var c = !this.state.c; //--->先改变当前的全选状态为true\n\n      list.forEach(function (v, i) {\n        //--->循环当前的list数组\n        v.checked = c; //--->把全选的状态true赋值给good中的checked\n      });\n      this.setState({\n        good: list,\n        c: c\n      }); //更新状态 \n    }\n  }, {\n    key: \"js\",\n    value: function js() {\n      //--->结算\n      var list = this.state.good;\n      var a = list.filter(function (v, i) {\n        //数组过滤的方法 满足条件，输出新的数组，把不满足条件的过滤掉 \n        return v.checked; //当多选框被选中的时候 \n      });\n      console.log(a); //在控制台输出当前被选中的数据，价格，数量 等 \n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, this.state.good.map(function (v, i) {\n        //数组的map方法 修该数据后，返回一个行的新的数组 \n        return __jsx(\"li\", {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 36\n          }\n        }, __jsx(\"img\", {\n          src: v.checked ? \"../../static/images/\" : \"../../static/images/cat.jpg\",\n          alt: \"\",\n          onClick: _this2.tg.bind(_this2, i),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }\n        }), __jsx(\"img\", {\n          src: v.img,\n          alt: \"\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }\n        }), __jsx(\"div\", {\n          className: \"box1\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }\n        }, v.txt), __jsx(\"i\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }\n        }, \"$\", v.jq), __jsx(\"input\", {\n          type: \"button\",\n          value: \"+\",\n          onClick: _this2.jj.bind(_this2, i),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }\n        }), __jsx(\"input\", {\n          type: \"text\",\n          value: v.num,\n          style: {\n            width: \"20px\"\n          },\n          readOnly: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }\n        }), \" \", __jsx(\"input\", {\n          type: \"button\",\n          value: \"-\",\n          onClick: _this2.jian.bind(_this2, i),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }\n        })));\n      })), __jsx(\"div\", {\n        className: \"box2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: (this.state.c ? \"active\" : \"\") + \" d1\",\n        onClick: this.qx.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 20\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 100\n        }\n      }, \"\\u5168\\u9009\")), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \"\\u5408\\u8BA1$\", this.zj()), __jsx(\"input\", {\n        type: \"button\",\n        value: \"\\u7ED3\\u7B97\",\n        onClick: this.js.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Sp;\n}(Component);\n\nexport default Sp; //导出","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201-test/20210201/code/next-ts模板/my-app/pages/shoptest2/index.jsx"],"names":["React","Component","Sp","props","state","good","img","txt","jq","num","checked","c","list","s","forEach","v","i","n","setState","alert","sun","ff","length","a","filter","console","log","map","tg","bind","jj","width","jian","qx","zj","js"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; //---->引入react模块\r\nimport \"./sp.css\" //引入sp.css样式\r\n\r\nclass Sp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={//定义一个初始化状态 \r\n            good:[//将页面的数据写入good中用数组的方式保存\r\n                {img:\"1.png\",txt:\"手工\",jq:12,num:1,checked:false},//这里的图片都是本地图片，需要你本人自己替换，样式里也有一张需要替换 \r\n                {img:\"2.png\",txt:\"桌\",jq:20,num:1,checked:false},\r\n                {img:\"3.png\",txt:\"椅\",jq:32,num:1,checked:false},\r\n                {img:\"1.png\",txt:\"板凳\",jq:40,num:1,checked:false}\r\n            ],\r\n            c:false   //定义一个状态，后面用来判断 多选框 \r\n\r\n        }\r\n    }\r\n    zj(){//--->总价\r\n        var list=this.state.good;//获取list中的数据  \r\n        var s=0;//声明一个s变量用来保存总价 \r\n        list.forEach((v,i)=>{//循环它里面的数据\r\n            if(v.checked){//判断，当多选框被选中的时候 \r\n                s+=(v.jq*v.num);//总价等于当前被选中的数据的单价*数量 \r\n            }\r\n        });\r\n        return s\r\n    }\r\n\r\n    jj(n){//+加按钮\r\n        var list=this.state.good;\r\n        list[n].num++;//n为当前的下标，点击后，每次数量加1\r\n        this.setState({good:list})//在更新当前的状态 \r\n    }\r\n    jian(n){//-减按钮\r\n        var list=this.state.good;\r\n        list[n].num--;//n为当前的下标，点击后，每次减1 \r\n        if(list[n].num<=0){\r\n            //判断，当数量减到0的时候，弹出“最少买一个”，后面不在执行，最低的数量是1\r\n            alert(\"最少买一个\");\r\n            list[n].num=1;\r\n        }\r\n        this.setState({good:list})//在更新当前的状态 \r\n    }\r\n    tg(n){//--->点击切换按钮   多选框  目前做了三种方法可以实现 \r\n        var list=this.state.good;\r\n        list[n].checked=!list[n].checked;//取反值 \r\n        // ===================================第一种方法\r\n        // var ler=list.filter((v,i)=>{//数组过滤的方法 \r\n        //     return v.checked//--->返回 该多选框为被选中\r\n        // });\r\n        // if(ler.length==list.length){//--->判断选中的多选框的长度和数组中的数据长度是否相同\r\n        //     this.setState({good:list,c:true})//--->如果是，把全选的属性false更新为true\r\n        // }else{\r\n        //     this.setState({good:list,c:false})//--->如果不是，全选属性为false\r\n        // }\r\n        // ==============================================第二种方法\r\n        // var ler=list.every((v,i)=>{//--->every当多选框都被选中的时候，条件都满足true\r\n        //     return v.checked;//--->单个被选中返回false\r\n        // })\r\n        // // console.log(ler)\r\n        // this.setState({good:list,c:ler})//更新cc的状态为ler,当ler为false时，cc就是false,反之亦然 \r\n        // ====================================================第三种方法\r\n        var sun=0;//声明一个sun ，用来保存数值\r\n        var ff=true;//声明一个状态 true  false 判断\r\n        list.forEach((v,i)=>{//循环加判断 \r\n            if(v.checked){//如果多选框被选中的时候，就让sun加1\r\n                sun++\r\n            }\r\n        })\r\n        if(sun==list.length){//当sun被选中的数量等于它当前整体的长度的时候 \r\n            ff=true;//输出ff的状态为true\r\n        }else{//反之 \r\n            ff=false\r\n        }\r\n        this.setState({good:list,c:ff})//让cc的状态等于当前ff的状态\r\n    }\r\n\r\n    qx(){//--->全选\r\n        var list=this.state.good;\r\n        var c=!this.state.c;//--->先改变当前的全选状态为true\r\n        list.forEach((v,i)=>{//--->循环当前的list数组\r\n            v.checked=c;//--->把全选的状态true赋值给good中的checked\r\n        });\r\n\r\n        this.setState({good:list,c})//更新状态 \r\n    }\r\n    js(){//--->结算\r\n        var list=this.state.good;\r\n        var a=list.filter((v,i)=>{//数组过滤的方法 满足条件，输出新的数组，把不满足条件的过滤掉 \r\n           return v.checked//当多选框被选中的时候 \r\n\r\n        })\r\n        console.log(a)//在控制台输出当前被选中的数据，价格，数量 等 \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                <ul>\r\n                    {\r\n                        this.state.good.map((v,i)=>{//数组的map方法 修该数据后，返回一个行的新的数组 \r\n                            return <li key={i}>\r\n                                {/*<span className={(v.checked?\"active\":\"\")+\" d1\"} onClick={this.tg.bind(this,i)}></span>*/}\r\n                                <img src={v.checked?\"../../static/images/\":\"../../static/images/cat.jpg\"} alt=\"\" onClick={this.tg.bind(this,i)}/>\r\n                                <img src={v.img} alt=\"\"/>\r\n                                <div className=\"box1\">\r\n                                    <p>{v.txt}</p>\r\n                                    <i>${v.jq}</i>\r\n                                    <input type=\"button\" value=\"+\" onClick={this.jj.bind(this,i)}/>\r\n                                    <input type=\"text\" value={v.num} style={{width:\"20px\"}} readOnly /> {/*注：style后要加双花括号{{}}*/}\r\n                                    <input type=\"button\" value=\"-\" onClick={this.jian.bind(this,i)}/>\r\n                                </div>\r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className=\"box2\">\r\n                   <span className={(this.state.c?\"active\":\"\")+\" d1\"} onClick={this.qx.bind(this)}><b>全选</b></span>\r\n                    <span>合计${this.zj()}</span>\r\n                    <input type=\"button\" value=\"结算\" onClick={this.js.bind(this)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sp;//导出 "]},"metadata":{},"sourceType":"module"}