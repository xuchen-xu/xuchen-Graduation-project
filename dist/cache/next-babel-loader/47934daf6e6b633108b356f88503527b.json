{"ast":null,"code":"// import 'whatwg-fetch'\n// import 'es6-promise'\n// import { Toast } from 'antd-mobile'\n// 统计请求发出的次数\nvar count = 0; //导出get请求\n\nexport function fetchget(url) {\n  if (count == 0) {\n    Toast.loading(\"Loading...\", 0);\n  }\n\n  count++;\n  var result = fetch(url, {\n    /*\r\n     fetch不管在同域还是在跨域的情况下，默认都不携带cookie的，所以那些需要权限验证的请求就无法正常获取到数据，这时候需要配置credentials项，有一下三个选项可添：\r\n     \t omit： 默认值，忽略cookie的发送\r\n    \t same-origin： 表示cookie只能同域发送，不能跨域发送\r\n    \t include： 表示既可以同域发送，也可以跨域发送\r\n    */\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }); //有三种方式解析获取到的数据：\n  //1 json数据      用reponse.json()来解析\n  //2 xml格式文件     用response.text()来解析\n  //3 图片文件      用response.blob()来解析\n\n  return result.then(function (response) {\n    count--;\n\n    if (count == 0) {\n      Toast.hide();\n    }\n\n    return response.json();\n  });\n} // 发送 post 请求\n\nexport function fetchpost(url, paramsObj) {\n  if (count == 0) {// Toast.loading(\"Loading...\",0)\n  }\n\n  count++;\n  var result = fetch(url, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    //post请求发送的数据需要是这样的：\"name=zhangsan&content=宝宝不开心\"\n    body: obj2params(paramsObj)\n  });\n  return result.then(function (response) {\n    count--;\n\n    if (count == 0) {\n      Toast.hide();\n    }\n\n    return response.json();\n  });\n} // 将对象拼接成 key1=val1&key2=val2&key3=val3 的字符串形式\n\nfunction obj2params(obj) {\n  var result = '';\n  var item;\n\n  for (item in obj) {\n    result += '&' + item + '=' + encodeURIComponent(obj[item]);\n  }\n\n  if (result) {\n    result = result.slice(1);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201-test/20210201/code/next-ts模板/my-app/utils/zgfetch.js"],"names":["count","fetchget","url","Toast","loading","result","fetch","credentials","headers","then","response","hide","json","fetchpost","paramsObj","method","body","obj2params","obj","item","encodeURIComponent","slice"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,IAAIA,KAAK,GAAG,CAAZ,C,CACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAC1B,MAAGF,KAAK,IAAI,CAAZ,EAAc;AACVG,IAAAA,KAAK,CAACC,OAAN,CAAc,YAAd,EAA2B,CAA3B;AACH;;AACDJ,EAAAA,KAAK;AACL,MAAIK,MAAM,GAAGC,KAAK,CAACJ,GAAD,EAAM;AACpB;AACR;AACA;AACA;AACA;AACA;AACQK,IAAAA,WAAW,EAAE,SAPO;AAQpBC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AARW,GAAN,CAAlB,CAL0B,CAiB1B;AACA;AACA;AACA;;AACA,SAAOH,MAAM,CAACI,IAAP,CAAY,UAAAC,QAAQ,EAAI;AAC3BV,IAAAA,KAAK;;AACL,QAAGA,KAAK,IAAI,CAAZ,EAAc;AACVG,MAAAA,KAAK,CAACQ,IAAN;AACH;;AACD,WAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,GANM,CAAP;AAOH,C,CAGD;;AACA,OAAO,SAASC,SAAT,CAAmBX,GAAnB,EAAwBY,SAAxB,EAAmC;AACtC,MAAGd,KAAK,IAAI,CAAZ,EAAc,CACV;AACH;;AACDA,EAAAA,KAAK;AACL,MAAIK,MAAM,GAAGC,KAAK,CAACJ,GAAD,EAAM;AACpBa,IAAAA,MAAM,EAAE,MADY;AAEpBR,IAAAA,WAAW,EAAE,SAFO;AAGpBC,IAAAA,OAAO,EAAE;AACL,gBAAU,mCADL;AAEL,sBAAgB;AAFX,KAHW;AAOpB;AACAQ,IAAAA,IAAI,EAAEC,UAAU,CAACH,SAAD;AARI,GAAN,CAAlB;AAUA,SAAOT,MAAM,CAACI,IAAP,CAAY,UAAAC,QAAQ,EAAI;AAC3BV,IAAAA,KAAK;;AACL,QAAGA,KAAK,IAAI,CAAZ,EAAc;AACVG,MAAAA,KAAK,CAACQ,IAAN;AACH;;AACD,WAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,GANM,CAAP;AAOH,C,CAED;;AACA,SAASK,UAAT,CAAoBC,GAApB,EAAyB;AACrB,MAAIb,MAAM,GAAG,EAAb;AACA,MAAIc,IAAJ;;AACA,OAAKA,IAAL,IAAaD,GAAb,EAAkB;AACdb,IAAAA,MAAM,IAAI,MAAMc,IAAN,GAAa,GAAb,GAAmBC,kBAAkB,CAACF,GAAG,CAACC,IAAD,CAAJ,CAA/C;AACH;;AACD,MAAId,MAAJ,EAAY;AACRA,IAAAA,MAAM,GAAGA,MAAM,CAACgB,KAAP,CAAa,CAAb,CAAT;AACH;;AACD,SAAOhB,MAAP;AACH","sourcesContent":["// import 'whatwg-fetch'\r\n// import 'es6-promise'\r\n// import { Toast } from 'antd-mobile'\r\n\r\n// 统计请求发出的次数\r\nlet count = 0;\r\n//导出get请求\r\nexport function fetchget(url) {\r\n    if(count == 0){\r\n        Toast.loading(\"Loading...\",0)\r\n    }\r\n    count++;\r\n    var result = fetch(url, {\r\n        /*\r\n         fetch不管在同域还是在跨域的情况下，默认都不携带cookie的，所以那些需要权限验证的请求就无法正常获取到数据，这时候需要配置credentials项，有一下三个选项可添：\r\n         \t omit： 默认值，忽略cookie的发送\r\n       \t\t same-origin： 表示cookie只能同域发送，不能跨域发送\r\n       \t\t include： 表示既可以同域发送，也可以跨域发送\r\n        */\r\n        credentials: 'include',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*'\r\n        }\r\n    });\r\n    //有三种方式解析获取到的数据：\r\n    //1 json数据      用reponse.json()来解析\r\n    //2 xml格式文件     用response.text()来解析\r\n    //3 图片文件      用response.blob()来解析\r\n    return result.then(response => {\r\n        count--;\r\n        if(count == 0){\r\n            Toast.hide();\r\n        }\r\n        return response.json()\r\n    });\r\n}\r\n\r\n\r\n// 发送 post 请求\r\nexport function fetchpost(url, paramsObj) {\r\n    if(count == 0){\r\n        // Toast.loading(\"Loading...\",0)\r\n    }\r\n    count++;\r\n    var result = fetch(url, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        //post请求发送的数据需要是这样的：\"name=zhangsan&content=宝宝不开心\"\r\n        body: obj2params(paramsObj)\r\n    });\r\n    return result.then(response => {\r\n        count--;\r\n        if(count == 0){\r\n            Toast.hide();\r\n        }\r\n        return response.json()\r\n    });\r\n}\r\n\r\n// 将对象拼接成 key1=val1&key2=val2&key3=val3 的字符串形式\r\nfunction obj2params(obj) {\r\n    var result = '';\r\n    var item;\r\n    for (item in obj) {\r\n        result += '&' + item + '=' + encodeURIComponent(obj[item]);\r\n    }\r\n    if (result) {\r\n        result = result.slice(1);\r\n    }\r\n    return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}